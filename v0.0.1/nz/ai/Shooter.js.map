{"version":3,"sources":["nz/ai/Shooter.coffee","nz/ai/Shooter.js"],"names":["_g","nz","ref","ref1","window","global","ai","Shooter","this","defaultAI","Default","ruleAI","Rule","rule","cond","param","setFriendsAndTargets","setNearTarget","distance","checkShotRange","setup","p","setShotCommand","calcSlidePosition","target","character","length","Math","rand","setMoveBackCommand","checkMovePosition","setMoveCommand","prototype","setupBattlePosition","o","setupAction","add","a","d","g","m","r","s","t","tm","geom","Vector2","setObject","utils","mapxy2screenxy","sub","toAngle","setRadian","screenxy2mapxy","system","addAI","call"],"mappings":"CAAA,WAAA,GAAAA,GAAAC,EAAAC,EAAAC,CAMAH,GAAA,mBAAAI,SAAA,OAAAA,OAAKA,OAASC,OACdJ,EAAKD,EAAGC,GAAH,OAAAC,EAAAF,EAAAC,IAAAC,KACLF,EAAK,OAELC,EAAGK,GAAH,OAAAH,EAAAF,EAAAK,IAAAH,KAEMF,EAAGK,GAAGC,QAAA,WAiCG,QAAAA,KACXC,KAACC,UAAgB,GAAAR,GAAGK,GAAGI,QACvBF,KAACG,OAAgB,GAAAV,GAAGK,GAAGM,KAAKJ,MAE5BA,KAACK,MACCC,KAAM,SAACC,GAIL,MAHAA,GAAMC,uBACND,EAAME,gBAECF,EAAMG,UAAY,GAAMH,EAAMI,kBACvCC,MAAO,SAACL,GAGN,GAAAM,EAMA,OANAN,GAAMO,iBAEND,EAAIb,KAACe,mBACHC,OAAQT,EAAMS,OACdC,UAAWV,EAAMU,UACjBC,OAAQ,IACPC,KAAKC,KAAK,EAAE,MAAQ,OACrBb,GAAMc,mBAAmB,IAExBd,EAAMe,kBAAkBT,GACzBN,EAAMgB,gBAAeP,OAAOH,IAE5BN,EAAMc,mBAAmB,IACpB,MACXrB,KAACK,MACCC,KAAM,SAACC,GAEL,MAAOA,GAAMG,UAAY,GAAMH,EAAMI,kBACvCC,MAAO,SAACL,GAKN,MAFAA,GAAMO,iBACNP,EAAMc,mBAAmB,IAClB,KACXrB,KAACK,MACCC,KAAM,SAACC,GAEL,MAAOA,GAAMG,UAAY,GAC3BE,MAAO,SAACL,GACN,GAAAM,EAQA,OARAA,GAAIb,KAACe,mBACHC,OAAQT,EAAMS,OACdC,UAAWV,EAAMU,UACjBC,OAAQ,IACPX,EAAMe,kBAAkBT,GACzBN,EAAMgB,gBAAeP,OAAOH,IAE5BN,EAAMc,mBAAmB,IACpB,KACXrB,KAACK,MACCC,KAAM,SAACC,GAEL,OAAO,GACTK,MAAO,SAACL,GAIN,MAFAA,GAAMgB,gBAAeL,OAAO,KAErB,KCqBX,MD/GFnB,GAAAyB,UAAAC,oBAAqB,SAACC,GCKlB,MDLwB1B,MAACC,UAAUwB,oBAAoBC,IAA3D3B,EAAAyB,UACAG,YAAa,SAACD,GCQV,MDRgB1B,MAACG,OAAOwB,YAAYD,IADxC3B,EAAAyB,UAEAnB,KAAM,SAACqB,GCWH,MDXS1B,MAACG,OAAOyB,IAAIF,IAFzB3B,EAAAyB,UAIAT,kBAAmB,SAACR,GAClB,GAAAsB,GAAAZ,EAAAa,EAAAC,EAAAb,EAAAc,EAAAC,EAAAC,EAAAC,EAAAnB,CAoBA,OAnBEA,GAAAT,EAAAS,OACAC,EAAAV,EAAAU,UACAC,EAAAX,EAAAW,OAEFc,EAAa,GAATd,EAEJiB,EAAIC,GAAGC,KAAKC,UAAUC,UAAU9C,EAAG+C,MAAMC,eAAezB,IAExDkB,EAAIE,GAAGC,KAAKC,UAAUC,UAAU9C,EAAG+C,MAAMC,eAAexB,IAExDa,EAAII,EAAExB,SAASyB,GAEfF,EAAIC,EAAEQ,IAAIP,GAAGQ,UAEbV,GAAKD,EAAIF,EAETC,EAAIK,GAAGC,KAAKC,UAAUM,UAAUX,EAAEH,GAAGF,IAAIO,GACzCN,EAAIpC,EAAG+C,MAAMK,eAAed,ICwFrBhC,KDnBXN,EAAGqD,OAAOC,MAAM,UAAe,GAAAtD,GAAGK,GAAGC,WCyBlCiD,KAAKhD","file":"nz/ai/Shooter.js","sourcesContent":["###*\n* @file Shooter.coffee\n* シューターAI\n###\n\n# node.js と ブラウザでの this.nz を同じインスタンスにする\n_g = window ? global\nnz = _g.nz = _g.nz ? {}\n_g = undefined\n\nnz.ai = nz.ai ? {}\n\nclass nz.ai.Shooter\n\n  setupBattlePosition: (o) -> @defaultAI.setupBattlePosition o\n  setupAction: (o) -> @ruleAI.setupAction o\n  rule: (o) -> @ruleAI.add o\n\n  calcSlidePosition: (param) ->\n    {\n      target\n      character\n      length\n    } = param\n    m = length * 32\n    # ターゲット\n    t = tm.geom.Vector2().setObject nz.utils.mapxy2screenxy target\n    # 自分の位置\n    s = tm.geom.Vector2().setObject nz.utils.mapxy2screenxy character\n    # ターゲットまでの距離\n    d = s.distance t\n    # ターゲットからの方向\n    r = s.sub(t).toAngle()\n    # 移動後の方向\n    r -= m / d\n    # 目的値\n    g = tm.geom.Vector2().setRadian(r,d).add(t)\n    a = nz.utils.screenxy2mapxy g\n    #console.log \"t=#{t} s=#{s} d=#{d} r=#{r} g=#{g} a.mapx=#{a.mapx} a.mapy=#{a.mapy}\"\n    return a\n\n  ###* 初期化\n  * @classdesc サンプルAIクラス\n  * @constructor nz.ai.Shooter\n  ###\n  constructor: ->\n    @defaultAI = new nz.ai.Default()\n    @ruleAI    = new nz.ai.Rule(@)\n\n    @rule\n      cond: (param) ->\n        param.setFriendsAndTargets()\n        param.setNearTarget()\n        # 距離が６以下で射撃範囲にターゲットがいる場合\n        return param.distance <= 6 and param.checkShotRange()\n      setup: (param) ->\n        #console.log \"turn #{param.turn} rule 1\"\n        # 射撃移動\n        param.setShotCommand()\n        # TODO: 座標計算＆壁計算も\n        p = @calcSlidePosition\n          target: param.target\n          character: param.character\n          length: 4\n        if Math.rand(1,100) >= 50\n          param.setMoveBackCommand(2)\n          return\n        if param.checkMovePosition p\n          param.setMoveCommand(target:p)\n        else\n          param.setMoveBackCommand(2)\n        return true\n    @rule\n      cond: (param) ->\n        # 距離が８以下で射撃範囲にターゲットがいる場合\n        return param.distance <= 8 and param.checkShotRange()\n      setup: (param) ->\n        #console.log \"turn #{param.turn} rule 2\"\n        # 移動射撃\n        param.setShotCommand()\n        param.setMoveBackCommand(5)\n        return true\n    @rule\n      cond: (param) ->\n        # 距離が８以下\n        return param.distance <= 8\n      setup: (param) ->\n        p = @calcSlidePosition\n          target: param.target\n          character: param.character\n          length: 3\n        if param.checkMovePosition p\n          param.setMoveCommand(target:p)\n        else\n          param.setMoveBackCommand(2)\n        return true\n    @rule\n      cond: (param) ->\n        # どれでもない時\n        return true\n      setup: (param) ->\n        # 近づく\n        param.setMoveCommand(length:3)\n        # TODO: 壁を意識した移動（中央へ）\n        return true\n\nnz.system.addAI 'Shooter', new nz.ai.Shooter()\n",null],"sourceRoot":"/source/"}